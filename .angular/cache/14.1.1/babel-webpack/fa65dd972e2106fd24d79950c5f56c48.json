{"ast":null,"code":"import _classCallCheck from \"C:/Users/12345/Desktop/final simplilean capstone/fe/ecom-app-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/12345/Desktop/final simplilean capstone/fe/ecom-app-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var ProductService = /*#__PURE__*/(function () {\n  var ProductService = /*#__PURE__*/function () {\n    function ProductService(http) {\n      _classCallCheck(this, ProductService);\n\n      this.http = http;\n      this.baseUrl = 'http://localhost:9090/api/products';\n      this.categoryUrl = 'http://localhost:9090/api/product-category';\n    }\n\n    _createClass(ProductService, [{\n      key: \"getProductsListPaginate\",\n      value: function getProductsListPaginate(thePage, thePageSize, theCategoryId) {\n        // need to build URL based on Category id\n        var searchUrl = \"\".concat(this.baseUrl, \"/search/findByCategoryId?id=\").concat(theCategoryId) + \"&page=\".concat(thePage, \"&size=\").concat(thePageSize);\n        return this.http.get(searchUrl);\n      }\n    }, {\n      key: \"getProductsList\",\n      value: function getProductsList(theCategoryId) {\n        // need to build URL based on Category id\n        var searchUrl = \"\".concat(this.baseUrl, \"/search/findByCategoryId?id=\").concat(theCategoryId);\n        return this.getProducts(searchUrl);\n      }\n    }, {\n      key: \"searchProductsList\",\n      value: function searchProductsList(value) {\n        var searchUrl = \"\".concat(this.baseUrl, \"/search/findByNameContaining?name=\").concat(value);\n        return this.getProducts(searchUrl);\n      }\n    }, {\n      key: \"getProducts\",\n      value: function getProducts(searchUrl) {\n        return this.http.get(searchUrl).pipe(map(function (response) {\n          return response._embedded.products;\n        }));\n      }\n    }, {\n      key: \"getProductCategories\",\n      value: function getProductCategories() {\n        return this.http.get(this.categoryUrl).pipe(map(function (response) {\n          return response._embedded.productCategory;\n        }));\n      }\n    }, {\n      key: \"getProduct\",\n      value: function getProduct(theProductId) {\n        // need to build the URL based on product id\n        var productUrl = \"\".concat(this.baseUrl, \"/\").concat(theProductId);\n        return this.http.get(productUrl);\n      }\n    }]);\n\n    return ProductService;\n  }();\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}